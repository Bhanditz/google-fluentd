#!/bin/bash
#
# <%= File.join(root_path, "etc/rc.d/init.d", project_name) %>
#
# chkconfig: - 80 20
# description: <%= project_name %>
# processname: <%= project_name %>
# pidfile: <%= File.join(root_path, "var/run", project_name, "#{project_name}.pid") %>
#
### BEGIN INIT INFO
# Provides:          <%= project_name %>
# Default-Stop:      0 1 6
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Short-Description: <%= project_name %>'s init script
# Description:       <%= project_name %> is a data collector
### END INIT INFO
<% require "shellwords" %>
# Source function library.
. <%= File.join(root_path, "etc/init.d/functions") %>

export PATH=<%= xs="/sbin:/usr/sbin:/bin:/usr/bin".split(":"); Shellwords.shellescape((xs.map{ |x| File.join(root_path, x)} + xs).uniq.join(":")) %>

TD_AGENT_NAME=<%= Shellwords.shellescape(project_name) %>
TD_AGENT_HOME=<%= Shellwords.shellescape(File.join(root_path, install_path)) %>
TD_AGENT_DEFAULT=<%= Shellwords.shellescape(File.join(root_path, "etc", "sysconfig", project_name)) %>
TD_AGENT_USER=<%= Shellwords.shellescape(project_name) %>
TD_AGENT_GROUP=<%= Shellwords.shellescape(project_name) %>
TD_AGENT_RUBY=<%= Shellwords.shellescape(File.join(root_path, install_path, "embedded", "bin", "ruby")) %>
TD_AGENT_BIN_FILE=<%= Shellwords.shellescape(File.join(root_path, "usr", "sbin", "td-agent")) %>
TD_AGENT_LOG_FILE=<%= Shellwords.shellescape(File.join(root_path, "var", "log", project_name, "#{project_name}.log")) %>
TD_AGENT_PID_FILE=<%= Shellwords.shellescape(File.join(root_path, "var", "run", project_name, "#{project_name}.pid")) %>
TD_AGENT_LOCK_FILE=<%= Shellwords.shellescape(File.join(root_path, "var", "lock", "subsys", project_name)) %>
TD_AGENT_OPTIONS="--use-v1-config"

# timeout can be overridden from <%= File.join(root_path, "etc/sysconfig", project_name) %>
STOPTIMEOUT=120

if [ -f "${TD_AGENT_DEFAULT}" ]; then
  . "${TD_AGENT_DEFAULT}"
fi

if [ -n "${name}" ]; then
  # backward compatibility with omnibus-td-agent <= 2.2.0. will be deleted from future release.
  echo "Warning: Declaring \$name in ${TD_AGENT_DEFAULT} has been deprecated. Use \$TD_AGENT_NAME instead." 1>&2
  TD_AGENT_NAME="${name}"
fi

if [ -n "${prog}" ]; then
  # backward compatibility with omnibus-td-agent <= 2.2.0. will be deleted from future release.
  echo "Warning: Declaring \$prog in ${TD_AGENT_DEFAULT} for customizing \$PIDFILE has been deprecated. Use \$TD_AGENT_PID_FILE instead." 1>&2
  if [ -z "${PIDFILE}" ]; then
    TD_AGENT_PID_FILE="<%= root_path %>/var/run/<%= project_name %>/${prog}.pid"
  fi
  TD_AGENT_LOCK_FILE="<%= root_path %>/var/lock/subsys/${prog}"
  TD_AGENT_PROG_NAME="${prog}"
else
  unset TD_AGENT_PROG_NAME
fi

if [ -n "${process_bin}" ]; then
  # backward compatibility with omnibus-td-agent <= 2.2.0. will be deleted from future release.
  echo "Warning: Declaring \$process_bin in ${TD_AGENT_DEFAULT} has been deprecated. Use \$TD_AGENT_RUBY instead." 1>&2
  TD_AGENT_RUBY="${process_bin}"
fi

if [ -n "${PIDFILE}" ]; then
  echo "Warning: Declaring \$PIDFILE in ${TD_AGENT_DEFAULT} has been deprecated. Use \$TD_AGENT_PIDFILE instead." 1>&2
  TD_AGENT_PID_FILE="${PIDFILE}"
fi

DAEMON_ARGS="${DAEMON_ARGS---user ${TD_AGENT_USER}}"
TD_AGENT_ARGS="${TD_AGENT_ARGS-${TD_AGENT_BIN_FILE} --group ${TD_AGENT_GROUP} --log ${TD_AGENT_LOG_FILE} ${TD_AGENT_OPTIONS}}"

if [ -n "${TD_AGENT_PID_FILE}" ]; then
  mkdir -p "$(dirname "${TD_AGENT_PID_FILE}")"
  chown -R "${TD_AGENT_USER}:${TD_AGENT_GROUP}" "$(dirname "${TD_AGENT_PID_FILE}")"
  TD_AGENT_ARGS="${TD_AGENT_ARGS} --daemon ${TD_AGENT_PID_FILE}"
fi

# 2012/04/17 Kazuki Ohta <k@treasure-data.com>
# use jemalloc to avoid fragmentation
if [ -f "${TD_AGENT_HOME}/embedded/lib/libjemalloc.so" ]; then
  export LD_PRELOAD="${TD_AGENT_HOME}/embedded/lib/libjemalloc.so"
fi

RETVAL=0

do_start() {
  # Set Max number of file descriptors for the safety sake
  # see http://docs.fluentd.org/en/articles/before-install
  ulimit -n 65536 1>/dev/null 2>&1 || true
  echo -n "Starting ${TD_AGENT_NAME}: "
  local RETVAL=0
  daemon --pidfile="${TD_AGENT_PID_FILE}" $DAEMON_ARGS "${TD_AGENT_RUBY}" $TD_AGENT_ARGS || RETVAL="$?"
  echo
  [ $RETVAL -eq 0 ] && touch "${TD_AGENT_LOCK_FILE}"
  return $RETVAL
}

do_stop() {
  echo -n "Shutting down ${TD_AGENT_NAME}: "
  local RETVAL=0
  if [ -e "${TD_AGENT_PID_FILE}" ]; then
    # Use own process termination instead of killproc because killproc can't wait SIGTERM
    TD_AGENT_PID=`cat "${TD_AGENT_PID_FILE}" 2>/dev/null`
    if [ -n "$TD_AGENT_PID" ]; then
      <%= File.join(root_path, "bin/kill") %> "$TD_AGENT_PID" >/dev/null 2>&1 || RETVAL="$?"
      if [ $RETVAL -eq 0 ]; then
        TIMEOUT="$STOPTIMEOUT"
        while [ $TIMEOUT -gt 0 ]; do
          <%= File.join(root_path, "bin/kill") %> -0 "$TD_AGENT_PID" >/dev/null 2>&1 || break
          sleep 1
          let TIMEOUT="${TIMEOUT}-1" || true
        done
        if [ "$TIMEOUT" -eq 0 ]; then
          echo -n "Timeout error occurred trying to stop ${TD_AGENT_NAME}..."
          RETVAL=1
          failure || true
        else
          RETVAL=0
          success
        fi
      else
        failure || true
      fi
    else
      failure || true
      RETVAL=4
    fi
  else
    killproc "${TD_AGENT_PROG_NAME:-${TD_AGENT_NAME}}" || RETVAL="$?"
    if [ $RETVAL -eq 0 ]; then
      success
    else
      failure || true
    fi
  fi
  echo
  [ $RETVAL -eq 0 ] && rm -f "${TD_AGENT_PID_FILE}" && rm -f "${TD_AGENT_LOCK_FILE}"
  return $RETVAL
}

do_restart() {
  do_configtest || return $?
  do_stop || true
  do_start
}

do_reload() {
  do_configtest || return $?
  echo -n "Reloading ${TD_AGENT_NAME}: "
  local RETVAL=0
  killproc "${TD_AGENT_RUBY}" -HUP || RETVAL="$?"
  echo
  return "$RETVAL"
}

do_configtest() {
  eval "$TD_AGENT_ARGS $DAEMON_ARGS --dry-run -q"
}

case "$1" in
"start" )
  do_start
  ;;
"stop" )
  do_stop
  ;;
"restart" )
  do_restart
  ;;
"reload" )
  do_reload
  ;;
"condrestart" )
  [ -f "${TD_AGENT_LOCK_FILE}" ] && do_restart || :
  ;;
"configtest" )
  do_configtest
  ;;
"status" )
  status -p "${TD_AGENT_PID_FILE}" "${TD_AGENT_NAME}"
  ;;
* )
  echo "Usage: $0 {start|stop|reload|restart|condrestart|status|configtest}"
  exit 1
  ;;
esac
